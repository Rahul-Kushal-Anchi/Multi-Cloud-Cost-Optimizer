# AWS Cost Optimizer - Web Application Dockerfile
# React frontend application

# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY web-app/package*.json ./

# Install dependencies
RUN npm install --only=production

# Copy source code
COPY web-app/ .

# Build the application
RUN npm run build

# Production stage
FROM nginx:1.25-alpine

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY deployment/docker/nginx.conf /etc/nginx/nginx.conf

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

# Expose port
EXPOSE 3000

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
